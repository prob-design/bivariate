{
 "cells": [
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from src.class_multivar import Bivariate, Multivariate\n",
=======
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from src.class_multivar import Bivariate, Multivar\n",
>>>>>>> origin/testing
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as st"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import multivariate_normal as mvn\n",
    "from scipy.optimize import fsolve"
=======
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import multivariate_normal as mvn"
>>>>>>> origin/testing
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
=======
   "execution_count": 3,
>>>>>>> origin/testing
   "metadata": {},
   "outputs": [],
   "source": [
    "X1 = st.norm(0,1)\n",
    "X2 = st.norm(1,0.3)\n",
    "X3 = st.norm(3,1.7)"
   ]
  },
  {
<<<<<<< HEAD
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Bivariate class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
=======
   "cell_type": "code",
   "execution_count": 4,
>>>>>>> origin/testing
   "metadata": {},
   "outputs": [],
   "source": [
    "B12 = Bivariate(X1, X2, \"Normal\", 0.5)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
   "metadata": {},
   "outputs": [],
=======
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(<Figure size 1200x800 with 1 Axes>,\n",
       " <Axes: title={'center': 'Cumulative density function of $X_{0}$'}, xlabel='$F(X_0})$'>)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
>>>>>>> origin/testing
   "source": [
    "B12.drawMarginalCdf(0)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
=======
   "execution_count": 6,
>>>>>>> origin/testing
   "metadata": {},
   "outputs": [],
   "source": [
    "def myLSF(x):\n",
<<<<<<< HEAD
    "    return x[0] - x[1] +2\n",
    "\n",
    "# Due to the symmetry of the square function in 0, the default start=0 leads to no convergence\n",
    "B12.pointLSF(myLSF, 1, 9)"
=======
    "    return x[0]**2 - x[1]"
>>>>>>> origin/testing
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "B12.pointLSF(myLSF, 1, np.array([9, 5, -3]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "f, ax = plt.subplots(ncols=2, figsize=(20, 10))\n",
    "B12.plotLSF(myLSF, ax=ax[0], xlim=(-2, 2))\n",
    "# B12.plotLSF(myLSF, ax=ax[1], reverse=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# B12.plot_contour(ax[0])\n",
    "# B12.plot_contour(ax[1], reverse=True)\n",
    "\n",
    "f"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Multivariate class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "M = Multivariate([X1, X2, X3], [(\"Normal\", 0.5), (\"Normal\", 0.75)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "M.drawMarginalPdf(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = np.linspace(0, 10)\n",
    "M.C1.plotLSF(myLSF)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "f, ax = M.bivariate_plot(0, 1, myLSF, xlim=(-3, 3))"
=======
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[9.0, 0.0, 64.0]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "B12.pointLSF(myLSF, 0, [3, 0, 8])"
>>>>>>> origin/testing
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "bivariate",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
